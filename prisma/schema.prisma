generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id String @id @default(nanoid(16))
  googleID String? @unique
  username String @unique
  dateOfBirth DateTime?
  name String?
  email String @unique
  phoneNumber String?
  password String? 
  description String?
  displayName String?
  profilePic String?
  refreshToken String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  isVerified Boolean? @default(false)
  isBlocked Boolean? @default(false)
  resetPasswordToken String?
	resetPasswordTokenExpiresAt DateTime?
  verificationToken String?
	verificationTokenExpiresAt DateTime?
  lastLogin DateTime @default(now())
  friends Friends[]
  notifications Notifications[]
  role Roles @default(USER)
  accountSettings AccountSettings?
  @@map("users")
  @@index([createdAt])
}

enum Roles {
  USER
  ADMIN
}

model Friends {
    id String @id @default(nanoid(16))
    name String
    preferedName String
    dateOfBirth DateTime
    phoneNumber String?
    whatsappNumber String? //REMOVE THIS
    email String?
    relationship String? // Make this in tags
    description String?
    createdAt   DateTime @default(now()) @map("created_at")
    updatedAt   DateTime @updatedAt @map("updated_at")
    isDeleted Boolean? @default(false)

    //RELATIONSHIP BETWEEN USER AND FRIENDS
    user User @relation(fields: [userId], references: [id])
    userId String
    @@index([createdAt])
    @@map("friends")
}

model AccountSettings {
  id String @id @default(nanoid(16))
  userId String @unique
  user User @relation(fields: [userId], references: [id])

  birthdayNotificationTime Int?
  timeToSendBirthdayMessages DateTime?
  defaultMessageChannel MessageChannel? // Add Default
  useNickNameInMessage Boolean? @default(false)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("account_settings")
}

enum MessageChannel {
  WHATSAPP
  EMAIL
  TEXTMESSAGE
}

model Notifications {
  id String @id @default(nanoid(16))
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  tag String? // Optional tag to categorize notifications
  title String
  message String
  isDeleted Boolean? @default(false)
  isRead Boolean? @default(false)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("notifications")
  @@index([createdAt])
}
